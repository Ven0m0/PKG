--native_cpu --cuda --use-zstd
-DLLVM_ENABLE_PROJECTS="clang;polly;lld;compiler-rt;openmp

git clone https://github.com/intel/llvm.git
cd llvm
mkdir build && cd build

cmake -G Ninja ../llvm \
  -DCMAKE_BUILD_TYPE=Release \
  -DLLVM_TARGETS_TO_BUILD=X86 \
  -DLLVM_TARGET_ARCH=host \
  -DCMAKE_SYSTEM_NAME=Linux \
  -DLVM_DYLIB_COMPONENTS=Native \
  -DLLVM_ENABLE_PROJECTS="polly;lldb;lld;clang-tools-extra;clang;bolt;libclc" \
  -DLLVM_ENABLE_RUNTIMES="libc;libcxxabi;libcxx;compiler-rt;openmp;llvm-libgcc;offload" \
# LLD
  -DLLVM_USE_LINKER=lld \
  -DLLVM_ENABLE_LLD=ON
  -DBOOTSTRAP_LLVM_ENABLE_LLD=ON \
# Zlib
  -DLLVM_ENABLE_ZLIB=ON \
  -DZLIB_INCLUDE_DIR=/usr/include \
  -DZLIB_LIBRARY=/usr/lib/libz-ng.so \
  #-DZLIB_LIBRARY=$(pkg-config --libs zlib-ng) \
# ZSTD
  -DLLVM_ENABLE_ZSTD=FORCE_ON \
  -DZSTD_LIBRARY=/usr/lib/libzstd.so \
# Libs
  -DLLVM_ENABLE_LIBCXX=ON \
  -DLLVM_ENABLE_LLVM_LIBC=ON \
  -DLLDB_USE_SYSTEM_SIX=1 \
  -DLLVM_ENABLE_CURL=ON" \
  -DLLVM_ENABLE_HTTPLIB=ON \
  -DLLVM_ENABLE_RTTI=ON \
#Tweaks
  -DCMAKE_CXX_FLAGS_RELEASE="-O3" \
  -DLLVM_UNREACHABLE_OPTIMIZE=ON \
  -DLLVM_ENABLE_THREADS=ON \
  -DLLVM_ENABLE_RPMALLOC=ON \
  -DLLVM_OPTIMIZED_TABLEGEN=ON \
# LTO
  -DLLVM_ENABLE_LTO=ON \
  -DBOOTSTRAP_LLVM_ENABLE_LTO=ON \
# Misc
  #-DLLVM_USE_INTEL_JITEVENTS=ON \
  #-DLLVM_ENABLE_EXPORTED_SYMBOLS_IN_EXECUTABLES=OFF \
  #-DLLVM_ENABLE_DEBUGLOC_COVERAGE_TRACKING=ON \
  #-DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
  -DLLVM_CCACHE_BUILD=ON
# Bolt
  -DBOLT_ENABLE_RUNTIME_default=ON
  -DBOLT_ENABLE_RUNTIME=ON
# Debloat
  -DLLVM_INCLUDE_TESTS=OFF
  -DCOMPILER_RT_INCLUDE_TESTS=OFF
  -DCLANG_INCLUDE_TESTS=OFF
  -DLLVM_INCLUDE_EXAMPLES=OFF
  -DLLVM_INCLUDE_BENCHMARKS=OFF
  -DLLVM_BUILD_DOCS=OFF
  -DLLVM_INCLUDE_DOCS=OFF
  -DCLANG_INCLUDE_DOCS=OFF
  -DLLVM_ENABLE_DOXYGEN=OFF
  -DLLVM_ENABLE_TELEMETRY=OFF
  -DBOLT_INCLUDE_DOCS=OFF
  -DBOLT_INCLUDE_TESTS=OFF
  -DLLVM_ENABLE_TELEMETRY=OFF \
  -DLLVM_ENABLE_DUMP=OFF \


--cmake-opt="LLVM_ENABLE_RUNTIMES=all --cmake-opt="-D LLVM_ENABLE_PROJECTS="polly;lldb;lld;compiler-rt;clang-tools-extra;clang;bolt;libc;libclc;openmp" --cmake-opt="LLVM_ENABLE_LTO=Full


--cmake-opt="-DLLVM_ENABLE_PROJECTS=clang;libcxx;libcxxabi;bolt;compiler-rt;openmp;polly;lld" \
--cmake-opt="-DLLVM_ENABLE_TELEMETRY=OFF"
--cmake-opt="-DLLVM_UNREACHABLE_OPTIMIZE=ON"
--cmake-opt="-DLLVM_ENABLE_ZSTD=FORCE_ON"
--cmake-opt="-DZSTD_LIBRARY=/usr/lib/libzstd.so" \
--cmake-opt="-DLLVM_ENABLE_LLD=ON" \
--cmake-opt="-DLLVM_USE_LINKER=lld" \
--cmake-opt="-DZLIB_INCLUDE_DIR=/usr/include" \
--cmake-opt="-DZLIB_LIBRARY=$(pkg-config --libs zlib-ng)" \
--cmake-opt="-DLLVM_ENABLE_DEBUGLOC_COVERAGE_TRACKING=ON"
--cmake-opt="-DLLVM_ENABLE_ZLIB=ON"

--cmake-opt="POLLY_ENABLE_GPGPU_CODEGEN=ON"


CFLAGS=${CFLAGS/-g /-g1 }
  CXXFLAGS=${CXXFLAGS/-g /-g1 }


rm cmake/modules/Findzstd.cmake
build() {
    export CFLAGS+=" ${CPPFLAGS}"
    export CXXFLAGS+=" ${CPPFLAGS}"
    cmake \
        -B _build \
        -S "$srcdir"/llvm-project/llvm  \
        -G Ninja \
        -D CMAKE_BUILD_TYPE=Release \
        -D CMAKE_INSTALL_PREFIX=/usr \
        -D LLVM_BINUTILS_INCDIR=/usr/include \
        -D LLVM_APPEND_VC_REV=ON \
        -D LLVM_VERSION_SUFFIX="" \
        -D LLVM_HOST_TRIPLE=$CHOST \
        --cmake-opt="-D LLVM_ENABLE_RTTI=ON" \
        --cmake-opt="-D LLVM_ENABLE_FFI=ON" \
        --cmake-opt="-D FFI_INCLUDE_DIR:PATH="$(pkg-config --variable=includedir libffi)" \
        --cmake-opt="-D LLVM_BUILD_LLVM_DYLIB=ON" \
        --cmake-opt="-D LLVM_LINK_LLVM_DYLIB=ON" \
        --cmake-opt="-D LLVM_INSTALL_UTILS=ON" \
        -DLLVM_ENABLE_CURL=ON
        -D LLVM_BUILD_DOCS=ON \
        -D LLVM_ENABLE_DOXYGEN=OFF \
        -D LLVM_ENABLE_SPHINX=ON \
        -D LLVM_ENABLE_BINDINGS=OFF \
        -D SPHINX_OUTPUT_HTML:BOOL=OFF \
        -D SPHINX_WARNINGS_AS_ERRORS=OFF \
        -D POLLY_ENABLE_GPGPU_CODEGEN=ON \
        --cmake-opt="-D LLDB_USE_SYSTEM_SIX=1" \
        --cmake-opt="-D LLVM_ENABLE_PROJECTS="polly;lldb;lld;compiler-rt;clang-tools-extra;clang;bolt;libc;libclc;openmp" \
        -D LLVM_LIT_ARGS="-sv --ignore-fail" \
        -D LLVM_ENABLE_DUMP=ON \
        -D LLVM_ENABLE_LLD=ON \
        -D LLVM_USE_LINKER=lld \
        -D LLVM_ENABLE_ZSTD=ON
        -D ZSTD_LIBRARY=/usr/lib/libzstd.so
        -D ZLIB_INCLUDE_DIR=/usr/include
        -D ZLIB_LIBRARY=$(pkg-config --libs zlib-ng
        -D LLVM_UNREACHABLE_OPTIMIZE=ON
        -D LLVM_ENABLE_TELEMETRY=OFF
        -DLLVM_USE_PERF=ON
        -Wno-dev

    ninja -C _build $NINJAFLAGS
}
